{"ast":null,"code":"var _jsxFileName = \"/Users/alessioprato/Desktop/SELFIE/client/src/Login.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ResponseStatus } from \"./types/ResponseStatus\";\nimport { SERVER_API } from \"./params/params\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [username, setUsername] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [clearPswd, setClearPswd] = React.useState(false);\n  const [message, setMessage] = React.useState(\"\");\n  const nav = useNavigate();\n  React.useEffect(() => {\n    (async () => {\n      try {\n        const res = await fetch(`${SERVER_API}/users/`);\n        if (res.status === 200) {\n          const resBody = await res.json();\n          if (resBody.value) nav(\"/\");\n        }\n      } catch (e) {\n        setMessage(\"Impossibile raggiungere il server\");\n      }\n    })();\n  }, []);\n  async function handleLogin(e) {\n    e.preventDefault();\n    try {\n      const res = await fetch(`${SERVER_API}/users/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const resBody = await res.json();\n      if (resBody.status === ResponseStatus.GOOD) {\n        setMessage(\"Utente authenticato\");\n        nav(\"/\");\n      } else {\n        const msg = resBody.message || \"Unable lo login\";\n        setMessage(msg);\n      }\n    } catch (e) {\n      setMessage(\"Credenziali errate\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: [\"Username\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: username,\n          onChange: e => {\n            setUsername(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: clearPswd ? \"text\" : \"password\",\n          name: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: clearPswd,\n        onClick: () => setClearPswd(!clearPswd)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, this);\n}\n_s(Login, \"Gj2SPFgib8SqkDX9QvVBbd714xc=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useNavigate","ResponseStatus","SERVER_API","jsxDEV","_jsxDEV","Login","_s","username","setUsername","useState","password","setPassword","clearPswd","setClearPswd","message","setMessage","nav","useEffect","res","fetch","status","resBody","json","value","e","handleLogin","preventDefault","method","headers","body","JSON","stringify","GOOD","msg","className","children","htmlFor","type","name","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","checked","onClick","_c","$RefreshReg$"],"sources":["/Users/alessioprato/Desktop/SELFIE/client/src/Login.tsx"],"sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ResponseStatus } from \"./types/ResponseStatus\";\nimport { ResponseBody } from \"./types/ResponseBody\";\nimport { SERVER_API } from \"./params/params\";\n\nexport default function Login(): React.JSX.Element {\n\tconst [username, setUsername] = React.useState(\"\");\n\tconst [password, setPassword] = React.useState(\"\");\n\tconst [clearPswd, setClearPswd] = React.useState(false);\n\tconst [message, setMessage] = React.useState(\"\");\n\n\tconst nav = useNavigate();\n\n\tReact.useEffect(() => {\n\t\t(async (): Promise<void> => {\n\t\t\ttry {\n\t\t\t\tconst res = await fetch(`${SERVER_API}/users/`);\n\t\t\t\tif (res.status === 200) {\n\t\t\t\t\tconst resBody = await res.json();\n\t\t\t\t\tif (resBody.value) nav(\"/\");\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tsetMessage(\"Impossibile raggiungere il server\");\n\t\t\t}\n\t\t})();\n\t}, []);\n\n\tasync function handleLogin(e: React.MouseEvent<HTMLButtonElement>): Promise<void> {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tconst res = await fetch(`${SERVER_API}/users/login`, {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({ username, password }),\n\t\t\t});\n\n\t\t\tconst resBody: ResponseBody = await res.json();\n\t\t\tif (resBody.status === ResponseStatus.GOOD) {\n\t\t\t\tsetMessage(\"Utente authenticato\");\n\t\t\t\tnav(\"/\");\n\t\t\t} else {\n\t\t\t\tconst msg = resBody.message || \"Unable lo login\";\n\t\t\t\tsetMessage(msg);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetMessage(\"Credenziali errate\");\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"login-form\">\n\t\t\t<form>\n\t\t\t\t<label htmlFor=\"username\">\n\t\t\t\t\tUsername\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\tonChange={(e: React.ChangeEvent<HTMLInputElement>): void => {\n\t\t\t\t\t\t\tsetUsername(e.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t\t<label htmlFor=\"password\">\n\t\t\t\t\tPassword\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype={clearPswd ? \"text\" : \"password\"}\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(e: React.ChangeEvent<HTMLInputElement>): void =>\n\t\t\t\t\t\t\tsetPassword(e.target.value)\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tchecked={clearPswd}\n\t\t\t\t\tonClick={(): void => setClearPswd(!clearPswd)}\n\t\t\t\t/>\n\t\t\t\t<button onClick={handleLogin}>Login</button>\n\t\t\t</form>\n\n\t\t\t{message && <div>{message}</div>}\n\t\t</div>\n\t);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}