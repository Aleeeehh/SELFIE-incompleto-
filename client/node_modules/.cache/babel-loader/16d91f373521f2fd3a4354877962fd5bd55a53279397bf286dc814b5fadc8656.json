{"ast":null,"code":"var _jsxFileName = \"/Users/alessioprato/Desktop/SELFIE/client/src/Profile.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { SERVER_API } from \"./params/params\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ResponseStatus } from \"./types/ResponseStatus\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst emptyUser = {\n  id: \"\",\n  username: \"\",\n  password: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  birthday: new Date()\n};\nexport default function Profile() {\n  _s();\n  const [message, setMessage] = React.useState(\"\");\n  const [user, setUser] = React.useState(emptyUser);\n  const nav = useNavigate();\n  React.useEffect(() => {\n    (async () => {\n      try {\n        const res = await fetch(`${SERVER_API}/users`);\n        if (res.status !== 200) {\n          nav(\"/login\");\n        }\n        const data = await res.json();\n        console.log(data);\n        setUser(data.value);\n      } catch (e) {\n        console.log(e);\n        setMessage(\"Impossibile raggiungere il server\");\n      }\n    })();\n  }, []);\n  async function handleLogout(e) {\n    e.preventDefault();\n\n    // TODO: validate inputs (not empty, max length)\n    try {\n      const res = await fetch(`${SERVER_API}/users/logout`, {\n        method: \"POST\"\n      });\n      const resBody = await res.json();\n      console.log(resBody);\n      if (resBody.status === ResponseStatus.GOOD) {\n        alert(\"Logout effettuato correttamente!\");\n        nav(\"/login\");\n      } else {\n        setMessage(\"Errore durante il tentativo di logout\");\n      }\n    } catch (e) {\n      setMessage(\"Impossibile raggiungere il server\");\n    }\n  }\n  async function handleDelete(e) {\n    e.preventDefault();\n\n    // TODO: validate inputs (not empty, max length)\n    try {\n      const res = await fetch(`${SERVER_API}/users`, {\n        method: \"DELETE\"\n      });\n      const resBody = await res.json();\n      console.log(resBody);\n      if (resBody.status === ResponseStatus.GOOD) {\n        alert(\"Utente eliminato correttamente!\");\n        nav(\"/login\");\n      } else {\n        setMessage(\"Errore durante il tentativo di cancellazione\");\n      }\n    } catch (e) {\n      setMessage(\"Impossibile raggiungere il server\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [message && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: user.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: \"#ffff00\"\n        },\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: \"#ffff00\"\n        },\n        onClick: handleDelete,\n        children: \"Cancella Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(Profile, \"dfvtQkCTNQQP8X7U6yVyWcrJvtw=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","SERVER_API","useNavigate","ResponseStatus","jsxDEV","_jsxDEV","Fragment","_Fragment","emptyUser","id","username","password","firstName","lastName","birthday","Date","Profile","_s","message","setMessage","useState","user","setUser","nav","useEffect","res","fetch","status","data","json","console","log","value","e","handleLogout","preventDefault","method","resBody","GOOD","alert","handleDelete","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","backgroundColor","onClick","_c","$RefreshReg$"],"sources":["/Users/alessioprato/Desktop/SELFIE/client/src/Profile.tsx"],"sourcesContent":["import React from \"react\";\nimport { SERVER_API } from \"./params/params\";\nimport { ResponseBody } from \"./types/ResponseBody\";\nimport { useNavigate } from \"react-router-dom\";\nimport User from \"./types/User\";\nimport { ResponseStatus } from \"./types/ResponseStatus\";\n\nconst emptyUser: User = {\n\tid: \"\",\n\tusername: \"\",\n\tpassword: \"\",\n\tfirstName: \"\",\n\tlastName: \"\",\n\tbirthday: new Date(),\n};\nexport default function Profile(): React.JSX.Element {\n\tconst [message, setMessage] = React.useState(\"\");\n\tconst [user, setUser] = React.useState(emptyUser);\n\n\tconst nav = useNavigate();\n\n\tReact.useEffect(() => {\n\t\t(async (): Promise<void> => {\n\t\t\ttry {\n\t\t\t\tconst res = await fetch(`${SERVER_API}/users`);\n\t\t\t\tif (res.status !== 200) {\n\t\t\t\t\tnav(\"/login\");\n\t\t\t\t}\n\n\t\t\t\tconst data = (await res.json()) as ResponseBody;\n\t\t\t\tconsole.log(data);\n\n\t\t\t\tsetUser(data.value);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e);\n\t\t\t\tsetMessage(\"Impossibile raggiungere il server\");\n\t\t\t}\n\t\t})();\n\t}, []);\n\n\tasync function handleLogout(e: React.MouseEvent<HTMLButtonElement>): Promise<void> {\n\t\te.preventDefault();\n\n\t\t// TODO: validate inputs (not empty, max length)\n\t\ttry {\n\t\t\tconst res = await fetch(`${SERVER_API}/users/logout`, {\n\t\t\t\tmethod: \"POST\",\n\t\t\t});\n\n\t\t\tconst resBody = (await res.json()) as ResponseBody;\n\n\t\t\tconsole.log(resBody);\n\t\t\tif (resBody.status === ResponseStatus.GOOD) {\n\t\t\t\talert(\"Logout effettuato correttamente!\");\n\t\t\t\tnav(\"/login\");\n\t\t\t} else {\n\t\t\t\tsetMessage(\"Errore durante il tentativo di logout\");\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetMessage(\"Impossibile raggiungere il server\");\n\t\t}\n\t}\n\n\tasync function handleDelete(e: React.MouseEvent<HTMLButtonElement>): Promise<void> {\n\t\te.preventDefault();\n\n\t\t// TODO: validate inputs (not empty, max length)\n\t\ttry {\n\t\t\tconst res = await fetch(`${SERVER_API}/users`, {\n\t\t\t\tmethod: \"DELETE\",\n\t\t\t});\n\n\t\t\tconst resBody = (await res.json()) as ResponseBody;\n\t\t\tconsole.log(resBody);\n\n\t\t\tif (resBody.status === ResponseStatus.GOOD) {\n\t\t\t\talert(\"Utente eliminato correttamente!\");\n\t\t\t\tnav(\"/login\");\n\t\t\t} else {\n\t\t\t\tsetMessage(\"Errore durante il tentativo di cancellazione\");\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetMessage(\"Impossibile raggiungere il server\");\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{message && <div>{message}</div>}\n\t\t\t<div className=\"profile-container\">\n\t\t\t\t<div>{user.username}</div>\n\t\t\t\t<div>{user.password}</div>\n\t\t\t\t<button style={{ backgroundColor: \"#ffff00\" }} onClick={handleLogout}>\n\t\t\t\t\tLogout\n\t\t\t\t</button>\n\t\t\t\t<button style={{ backgroundColor: \"#ffff00\" }} onClick={handleDelete}>\n\t\t\t\t\tCancella Account\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}