{"ast":null,"code":"import React from\"react\";import{SERVER_API}from\"./params/params\";import{ResponseStatus}from\"./types/ResponseStatus\";import{useNavigate}from\"react-router-dom\";import{Order}from\"./enums\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PREVIEW_CHARS=200;export default function Notes(){const[noteList,setNoteList]=React.useState([]);const[message,setMessage]=React.useState(\"\");const nav=useNavigate();// On page load, get the notes for the user\nasync function getAllNotes(){try{const res=await fetch(\"\".concat(SERVER_API,\"/notes\"));if(res.status!==200){nav(\"/login\");}const resBody=await res.json();if(resBody.status===ResponseStatus.GOOD){setNoteList(resBody.value);}else{}}catch(e){setMessage(\"Impossibile raggiungere il server\");}}React.useEffect(()=>{getAllNotes();},[]);async function handleDuplicate(e,note){e.preventDefault();try{const res=await fetch(\"\".concat(SERVER_API,\"/notes\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({title:note.title,text:note.text,owner:note.owner,tags:note.tags})});const data=await res.json();console.log(data);if(data.status===ResponseStatus.GOOD){alert(\"Nota duplicata correttamente\");getAllNotes();}else{setMessage(\"Errore durante la duplicazione della nota\");}}catch(e){setMessage(\"Impossibile raggiungere il server\");}}async function handleDelete(e,note){e.preventDefault();try{const res=await fetch(\"\".concat(SERVER_API,\"/notes/\").concat(note.id),{method:\"DELETE\"});const data=await res.json();console.log(data);if(data.status===ResponseStatus.GOOD){alert(\"Nota eliminata correttamente\");getAllNotes();}else{setMessage(\"Errore durante l'eliminazione della nota\");}}catch(e){setMessage(\"Impossibile raggiungere il server\");}}// TODO: sort up and down (not only one direction)\nfunction sortBy(method){switch(method){case Order.NAME:setNoteList([...noteList].sort((a,b)=>a.title.localeCompare(b.title)));break;case Order.DATE:setNoteList([...noteList].sort((a,b)=>{if(!a.updatedAt)return 1;if(!b.updatedAt)return-1;return a.updatedAt.toString().localeCompare(b.updatedAt.toString());}));break;case Order.LENGTH:setNoteList([...noteList].sort((a,b)=>a.text.length-b.text.length));break;default:break;}}return/*#__PURE__*/_jsxs(\"div\",{className:\"note-outer-container\",children:[/*#__PURE__*/_jsx(\"a\",{href:\"/notes/new\",children:/*#__PURE__*/_jsx(\"button\",{children:\"Create New Note\"})}),/*#__PURE__*/_jsxs(\"table\",{className:\"note-list-container\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{style:{cursor:\"pointer\"},onClick:()=>sortBy(Order.NAME),children:\"Titolo\"}),/*#__PURE__*/_jsx(\"th\",{style:{cursor:\"pointer\"},onClick:()=>sortBy(Order.LENGTH),children:\"Testo\"}),/*#__PURE__*/_jsx(\"th\",{style:{cursor:\"pointer\"},onClick:()=>sortBy(Order.DATE),children:\"Ultima Modifica\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Duplica\"}),\" \",/*#__PURE__*/_jsx(\"th\",{children:\"Elimina\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:noteList.map(note=>{var _note$updatedAt;return/*#__PURE__*/_jsxs(\"tr\",{className:\"note-card\",children:[/*#__PURE__*/_jsxs(\"a\",{className:\"note-card-link\",href:\"/notes/\".concat(note.id),children:[/*#__PURE__*/_jsx(\"td\",{className:\"note-card-title\",children:note.title}),/*#__PURE__*/_jsx(\"td\",{className:\"note-card-text\",children:note.text.length>PREVIEW_CHARS?note.text.substring(0,PREVIEW_CHARS)+\"...\":note.text}),/*#__PURE__*/_jsx(\"td\",{className:\"note-card-date\",children:(_note$updatedAt=note.updatedAt)===null||_note$updatedAt===void 0?void 0:_note$updatedAt.toString()})]}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:e=>handleDuplicate(e,note),children:\"Duplica\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:e=>handleDelete(e,note),children:\"Cancella\"})})]});})})]}),message&&/*#__PURE__*/_jsx(\"div\",{children:message})]});}","map":{"version":3,"names":["React","SERVER_API","ResponseStatus","useNavigate","Order","jsx","_jsx","jsxs","_jsxs","PREVIEW_CHARS","Notes","noteList","setNoteList","useState","message","setMessage","nav","getAllNotes","res","fetch","concat","status","resBody","json","GOOD","value","e","useEffect","handleDuplicate","note","preventDefault","method","headers","body","JSON","stringify","title","text","owner","tags","data","console","log","alert","handleDelete","id","sortBy","NAME","sort","a","b","localeCompare","DATE","updatedAt","toString","LENGTH","length","className","children","href","style","cursor","onClick","map","_note$updatedAt","substring"],"sources":["/Users/alessioprato/Desktop/SELFIE/client/src/Notes.tsx"],"sourcesContent":["import React from \"react\";\nimport { SERVER_API } from \"./params/params\";\nimport Note from \"./types/Note\";\nimport { ResponseStatus } from \"./types/ResponseStatus\";\nimport { ResponseBody } from \"./types/ResponseBody\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Order } from \"./enums\";\n\nconst PREVIEW_CHARS = 200;\nexport default function Notes(): React.JSX.Element {\n\tconst [noteList, setNoteList] = React.useState([] as Note[]);\n\tconst [message, setMessage] = React.useState(\"\");\n\n\tconst nav = useNavigate();\n\t// On page load, get the notes for the user\n\n\tasync function getAllNotes(): Promise<void> {\n\t\ttry {\n\t\t\tconst res = await fetch(`${SERVER_API}/notes`);\n\t\t\tif (res.status !== 200) {\n\t\t\t\tnav(\"/login\");\n\t\t\t}\n\n\t\t\tconst resBody = (await res.json()) as ResponseBody;\n\n\t\t\tif (resBody.status === ResponseStatus.GOOD) {\n\t\t\t\tsetNoteList(resBody.value);\n\t\t\t} else {\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetMessage(\"Impossibile raggiungere il server\");\n\t\t}\n\t}\n\n\tReact.useEffect(() => {\n\t\tgetAllNotes();\n\t}, []);\n\n\tasync function handleDuplicate(\n\t\te: React.MouseEvent<HTMLButtonElement>,\n\t\tnote: Note\n\t): Promise<void> {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tconst res = await fetch(`${SERVER_API}/notes`, {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\ttitle: note.title,\n\t\t\t\t\ttext: note.text,\n\t\t\t\t\towner: note.owner,\n\t\t\t\t\ttags: note.tags,\n\t\t\t\t}),\n\t\t\t});\n\n\t\t\tconst data = (await res.json()) as ResponseBody;\n\n\t\t\tconsole.log(data);\n\n\t\t\tif (data.status === ResponseStatus.GOOD) {\n\t\t\t\talert(\"Nota duplicata correttamente\");\n\t\t\t\tgetAllNotes();\n\t\t\t} else {\n\t\t\t\tsetMessage(\"Errore durante la duplicazione della nota\");\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetMessage(\"Impossibile raggiungere il server\");\n\t\t}\n\t}\n\n\tasync function handleDelete(e: React.MouseEvent<HTMLButtonElement>, note: Note): Promise<void> {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tconst res = await fetch(`${SERVER_API}/notes/${note.id}`, {\n\t\t\t\tmethod: \"DELETE\",\n\t\t\t});\n\n\t\t\tconst data = (await res.json()) as ResponseBody;\n\n\t\t\tconsole.log(data);\n\n\t\t\tif (data.status === ResponseStatus.GOOD) {\n\t\t\t\talert(\"Nota eliminata correttamente\");\n\t\t\t\tgetAllNotes();\n\t\t\t} else {\n\t\t\t\tsetMessage(\"Errore durante l'eliminazione della nota\");\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetMessage(\"Impossibile raggiungere il server\");\n\t\t}\n\t}\n\n\t// TODO: sort up and down (not only one direction)\n\tfunction sortBy(method: Order): void {\n\t\tswitch (method) {\n\t\t\tcase Order.NAME:\n\t\t\t\tsetNoteList([...noteList].sort((a, b) => a.title.localeCompare(b.title)));\n\t\t\t\tbreak;\n\t\t\tcase Order.DATE:\n\t\t\t\tsetNoteList(\n\t\t\t\t\t[...noteList].sort((a, b) => {\n\t\t\t\t\t\tif (!a.updatedAt) return 1;\n\t\t\t\t\t\tif (!b.updatedAt) return -1;\n\t\t\t\t\t\treturn a.updatedAt.toString().localeCompare(b.updatedAt.toString());\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase Order.LENGTH:\n\t\t\t\tsetNoteList([...noteList].sort((a, b) => a.text.length - b.text.length));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"note-outer-container\">\n\t\t\t<a href={\"/notes/new\"}>\n\t\t\t\t<button>Create New Note</button>\n\t\t\t</a>\n\t\t\t<table className=\"note-list-container\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th style={{ cursor: \"pointer\" }} onClick={(): void => sortBy(Order.NAME)}>\n\t\t\t\t\t\t\tTitolo\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th\n\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\n\t\t\t\t\t\t\tonClick={(): void => sortBy(Order.LENGTH)}>\n\t\t\t\t\t\t\tTesto\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th style={{ cursor: \"pointer\" }} onClick={(): void => sortBy(Order.DATE)}>\n\t\t\t\t\t\t\tUltima Modifica\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th>Duplica</th> <th>Elimina</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{noteList.map((note) => (\n\t\t\t\t\t\t<tr className=\"note-card\">\n\t\t\t\t\t\t\t<a className=\"note-card-link\" href={`/notes/${note.id}`}>\n\t\t\t\t\t\t\t\t<td className=\"note-card-title\">{note.title}</td>\n\t\t\t\t\t\t\t\t<td className=\"note-card-text\">\n\t\t\t\t\t\t\t\t\t{note.text.length > PREVIEW_CHARS\n\t\t\t\t\t\t\t\t\t\t? note.text.substring(0, PREVIEW_CHARS) + \"...\"\n\t\t\t\t\t\t\t\t\t\t: note.text}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td className=\"note-card-date\">{note.updatedAt?.toString()}</td>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tonClick={(\n\t\t\t\t\t\t\t\t\t\te: React.MouseEvent<HTMLButtonElement>\n\t\t\t\t\t\t\t\t\t): Promise<void> => handleDuplicate(e, note)}>\n\t\t\t\t\t\t\t\t\tDuplica\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tonClick={(\n\t\t\t\t\t\t\t\t\t\te: React.MouseEvent<HTMLButtonElement>\n\t\t\t\t\t\t\t\t\t): Promise<void> => handleDelete(e, note)}>\n\t\t\t\t\t\t\t\t\tCancella\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t{message && <div>{message}</div>}\n\t\t</div>\n\t);\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,UAAU,KAAQ,iBAAiB,CAE5C,OAASC,cAAc,KAAQ,wBAAwB,CAEvD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,KAAK,KAAQ,SAAS,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhC,KAAM,CAAAC,aAAa,CAAG,GAAG,CACzB,cAAe,SAAS,CAAAC,KAAKA,CAAA,CAAsB,CAClD,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,KAAK,CAACa,QAAQ,CAAC,EAAY,CAAC,CAC5D,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGf,KAAK,CAACa,QAAQ,CAAC,EAAE,CAAC,CAEhD,KAAM,CAAAG,GAAG,CAAGb,WAAW,CAAC,CAAC,CACzB;AAEA,cAAe,CAAAc,WAAWA,CAAA,CAAkB,CAC3C,GAAI,CACH,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAInB,UAAU,UAAQ,CAAC,CAC9C,GAAIiB,GAAG,CAACG,MAAM,GAAK,GAAG,CAAE,CACvBL,GAAG,CAAC,QAAQ,CAAC,CACd,CAEA,KAAM,CAAAM,OAAO,CAAI,KAAM,CAAAJ,GAAG,CAACK,IAAI,CAAC,CAAkB,CAElD,GAAID,OAAO,CAACD,MAAM,GAAKnB,cAAc,CAACsB,IAAI,CAAE,CAC3CZ,WAAW,CAACU,OAAO,CAACG,KAAK,CAAC,CAC3B,CAAC,IAAM,CACP,CACD,CAAE,MAAOC,CAAC,CAAE,CACXX,UAAU,CAAC,mCAAmC,CAAC,CAChD,CACD,CAEAf,KAAK,CAAC2B,SAAS,CAAC,IAAM,CACrBV,WAAW,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAEN,cAAe,CAAAW,eAAeA,CAC7BF,CAAsC,CACtCG,IAAU,CACM,CAChBH,CAAC,CAACI,cAAc,CAAC,CAAC,CAClB,GAAI,CACH,KAAM,CAAAZ,GAAG,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAInB,UAAU,WAAU,CAC9C8B,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACR,cAAc,CAAE,kBACjB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACpBC,KAAK,CAAEP,IAAI,CAACO,KAAK,CACjBC,IAAI,CAAER,IAAI,CAACQ,IAAI,CACfC,KAAK,CAAET,IAAI,CAACS,KAAK,CACjBC,IAAI,CAAEV,IAAI,CAACU,IACZ,CAAC,CACF,CAAC,CAAC,CAEF,KAAM,CAAAC,IAAI,CAAI,KAAM,CAAAtB,GAAG,CAACK,IAAI,CAAC,CAAkB,CAE/CkB,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAEjB,GAAIA,IAAI,CAACnB,MAAM,GAAKnB,cAAc,CAACsB,IAAI,CAAE,CACxCmB,KAAK,CAAC,8BAA8B,CAAC,CACrC1B,WAAW,CAAC,CAAC,CACd,CAAC,IAAM,CACNF,UAAU,CAAC,2CAA2C,CAAC,CACxD,CACD,CAAE,MAAOW,CAAC,CAAE,CACXX,UAAU,CAAC,mCAAmC,CAAC,CAChD,CACD,CAEA,cAAe,CAAA6B,YAAYA,CAAClB,CAAsC,CAAEG,IAAU,CAAiB,CAC9FH,CAAC,CAACI,cAAc,CAAC,CAAC,CAClB,GAAI,CACH,KAAM,CAAAZ,GAAG,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAInB,UAAU,YAAAmB,MAAA,CAAUS,IAAI,CAACgB,EAAE,EAAI,CACzDd,MAAM,CAAE,QACT,CAAC,CAAC,CAEF,KAAM,CAAAS,IAAI,CAAI,KAAM,CAAAtB,GAAG,CAACK,IAAI,CAAC,CAAkB,CAE/CkB,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAEjB,GAAIA,IAAI,CAACnB,MAAM,GAAKnB,cAAc,CAACsB,IAAI,CAAE,CACxCmB,KAAK,CAAC,8BAA8B,CAAC,CACrC1B,WAAW,CAAC,CAAC,CACd,CAAC,IAAM,CACNF,UAAU,CAAC,0CAA0C,CAAC,CACvD,CACD,CAAE,MAAOW,CAAC,CAAE,CACXX,UAAU,CAAC,mCAAmC,CAAC,CAChD,CACD,CAEA;AACA,QAAS,CAAA+B,MAAMA,CAACf,MAAa,CAAQ,CACpC,OAAQA,MAAM,EACb,IAAK,CAAA3B,KAAK,CAAC2C,IAAI,CACdnC,WAAW,CAAC,CAAC,GAAGD,QAAQ,CAAC,CAACqC,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAACb,KAAK,CAACe,aAAa,CAACD,CAAC,CAACd,KAAK,CAAC,CAAC,CAAC,CACzE,MACD,IAAK,CAAAhC,KAAK,CAACgD,IAAI,CACdxC,WAAW,CACV,CAAC,GAAGD,QAAQ,CAAC,CAACqC,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,CAC5B,GAAI,CAACD,CAAC,CAACI,SAAS,CAAE,MAAO,EAAC,CAC1B,GAAI,CAACH,CAAC,CAACG,SAAS,CAAE,MAAO,CAAC,CAAC,CAC3B,MAAO,CAAAJ,CAAC,CAACI,SAAS,CAACC,QAAQ,CAAC,CAAC,CAACH,aAAa,CAACD,CAAC,CAACG,SAAS,CAACC,QAAQ,CAAC,CAAC,CAAC,CACpE,CAAC,CACF,CAAC,CACD,MACD,IAAK,CAAAlD,KAAK,CAACmD,MAAM,CAChB3C,WAAW,CAAC,CAAC,GAAGD,QAAQ,CAAC,CAACqC,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAACZ,IAAI,CAACmB,MAAM,CAAGN,CAAC,CAACb,IAAI,CAACmB,MAAM,CAAC,CAAC,CACxE,MACD,QACC,MACF,CACD,CAEA,mBACChD,KAAA,QAAKiD,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eACpCpD,IAAA,MAAGqD,IAAI,CAAE,YAAa,CAAAD,QAAA,cACrBpD,IAAA,WAAAoD,QAAA,CAAQ,iBAAe,CAAQ,CAAC,CAC9B,CAAC,cACJlD,KAAA,UAAOiD,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eACrCpD,IAAA,UAAAoD,QAAA,cACClD,KAAA,OAAAkD,QAAA,eACCpD,IAAA,OAAIsD,KAAK,CAAE,CAAEC,MAAM,CAAE,SAAU,CAAE,CAACC,OAAO,CAAEA,CAAA,GAAYhB,MAAM,CAAC1C,KAAK,CAAC2C,IAAI,CAAE,CAAAW,QAAA,CAAC,QAE3E,CAAI,CAAC,cACLpD,IAAA,OACCsD,KAAK,CAAE,CAAEC,MAAM,CAAE,SAAU,CAAE,CAC7BC,OAAO,CAAEA,CAAA,GAAYhB,MAAM,CAAC1C,KAAK,CAACmD,MAAM,CAAE,CAAAG,QAAA,CAAC,OAE5C,CAAI,CAAC,cACLpD,IAAA,OAAIsD,KAAK,CAAE,CAAEC,MAAM,CAAE,SAAU,CAAE,CAACC,OAAO,CAAEA,CAAA,GAAYhB,MAAM,CAAC1C,KAAK,CAACgD,IAAI,CAAE,CAAAM,QAAA,CAAC,iBAE3E,CAAI,CAAC,cACLpD,IAAA,OAAAoD,QAAA,CAAI,SAAO,CAAI,CAAC,IAAC,cAAApD,IAAA,OAAAoD,QAAA,CAAI,SAAO,CAAI,CAAC,EAC9B,CAAC,CACC,CAAC,cACRpD,IAAA,UAAAoD,QAAA,CACE/C,QAAQ,CAACoD,GAAG,CAAElC,IAAI,OAAAmC,eAAA,oBAClBxD,KAAA,OAAIiD,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBlD,KAAA,MAAGiD,SAAS,CAAC,gBAAgB,CAACE,IAAI,WAAAvC,MAAA,CAAYS,IAAI,CAACgB,EAAE,CAAG,CAAAa,QAAA,eACvDpD,IAAA,OAAImD,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAE7B,IAAI,CAACO,KAAK,CAAK,CAAC,cACjD9B,IAAA,OAAImD,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAC5B7B,IAAI,CAACQ,IAAI,CAACmB,MAAM,CAAG/C,aAAa,CAC9BoB,IAAI,CAACQ,IAAI,CAAC4B,SAAS,CAAC,CAAC,CAAExD,aAAa,CAAC,CAAG,KAAK,CAC7CoB,IAAI,CAACQ,IAAI,CACT,CAAC,cACL/B,IAAA,OAAImD,SAAS,CAAC,gBAAgB,CAAAC,QAAA,EAAAM,eAAA,CAAEnC,IAAI,CAACwB,SAAS,UAAAW,eAAA,iBAAdA,eAAA,CAAgBV,QAAQ,CAAC,CAAC,CAAK,CAAC,EAC9D,CAAC,cACJhD,IAAA,OAAAoD,QAAA,cACCpD,IAAA,WACCwD,OAAO,CACNpC,CAAsC,EACnBE,eAAe,CAACF,CAAC,CAAEG,IAAI,CAAE,CAAA6B,QAAA,CAAC,SAE/C,CAAQ,CAAC,CACN,CAAC,cACLpD,IAAA,OAAAoD,QAAA,cACCpD,IAAA,WACCwD,OAAO,CACNpC,CAAsC,EACnBkB,YAAY,CAAClB,CAAC,CAAEG,IAAI,CAAE,CAAA6B,QAAA,CAAC,UAE5C,CAAQ,CAAC,CACN,CAAC,EACF,CAAC,EACL,CAAC,CACI,CAAC,EACF,CAAC,CACP5C,OAAO,eAAIR,IAAA,QAAAoD,QAAA,CAAM5C,OAAO,CAAM,CAAC,EAC5B,CAAC,CAER","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}