{"ast":null,"code":"import React from\"react\";import{SERVER_API}from\"./params/params\";import{ResponseStatus}from\"./types/ResponseStatus\";import{useNavigate,useParams}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const baseNote={id:\"\",title:\"\",text:\"\",owner:\"\",tags:[]};const NEW=\"new\";export default function NotePage(){const{id}=useParams();const[note,setNote]=React.useState(baseNote);const[tag,setTag]=React.useState(\"\");const[message,setMessage]=React.useState(\"\");const nav=useNavigate();// On page load, get the note for the user\nReact.useEffect(()=>{if(id!==NEW)fetch(\"\".concat(SERVER_API,\"/notes/\").concat(id)).then(res=>res.json()).then(data=>{if(data.status===ResponseStatus.GOOD){setNote(data.value);console.log(data.value);}else{nav(\"/notes\");}}).catch(()=>{setMessage(\"Impossibile raggiungere il server\");nav(\"/notes\");});},[id]);function handleChange(e){setNote({...note,[e.target.name]:e.target.value});}async function handleCreate(e){e.preventDefault();try{const res=await fetch(\"\".concat(SERVER_API,\"/notes\"),{method:\"POST\",body:JSON.stringify(note),headers:{\"Content-Type\":\"application/json\"}});const resBody=await res.json();if(resBody.status===ResponseStatus.GOOD){const newNoteId=resBody.value;alert(\"Nota creata correttamente!\");// redirect to update page of the created note\nnav(\"/notes/\".concat(newNoteId));}else{setMessage(\"Errore nell'inserimento della nota\");}}catch(e){setMessage(\"Impossibile raggiungere il server\");}}async function handleUpdate(e){e.preventDefault();// TODO: validate inputs (not empty, max length)\ntry{const res=await fetch(\"\".concat(SERVER_API,\"/notes/\").concat(id),{method:\"PUT\",body:JSON.stringify(note),headers:{\"Content-Type\":\"application/json\"}});console.log(res);const resBody=await res.json();if(resBody.status===ResponseStatus.GOOD){alert(\"Nota modificata correttamente!\");setNote(resBody.value);}else{setMessage(\"Errore nell'aggiornamento della nota\");}}catch(e){setMessage(\"Impossibile raggiungere il server\");}}async function handleDelete(e){e.preventDefault();// TODO: validate inputs (not empty, max length)\ntry{const res=await fetch(\"\".concat(SERVER_API,\"/notes/\").concat(id),{method:\"DELETE\"});console.log(res);const resBody=await res.json();if(resBody.status===ResponseStatus.GOOD){alert(\"Nota cancellata correttamente!\");nav(\"/notes\");}else{setMessage(\"Errore della cancellazione della nota\");}}catch(e){setMessage(\"Impossibile raggiungere il server\");}}function addTag(e){e.preventDefault();if(note.tags.includes(tag)){setMessage(\"Tag già presente nella lista\");setTag(\"\");return;}if(tag===\"\"){setMessage(\"Tag vuota non valida\");return;}setNote(prevNote=>{const newTags=[];console.log(prevNote.tags);for(const t of prevNote.tags){newTags.push(t);}newTags.push(tag);return{...prevNote,tags:newTags};});setTag(()=>{return\"\";});}function deleteTag(e,tag){e.preventDefault();const tags=note.tags.filter(t=>t!==tag);setNote({...note,tags});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"page-title\",children:id===NEW?\"Crea una nuova nota\":\"Modifica nota\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"note-container\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"title\",children:[\"Titolo\",/*#__PURE__*/_jsx(\"input\",{name:\"title\",value:note.title,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"title\",children:[\"Testo\",/*#__PURE__*/_jsx(\"textarea\",{name:\"text\",value:note.text,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Tags\",/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"title\",children:[/*#__PURE__*/_jsx(\"input\",{name:\"tag\",value:tag,onChange:e=>{setTag(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{style:{margin:\"auto 0.5em\"},onClick:addTag,children:\"+\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"tags-container\",children:note&&note.tags&&note.tags.map(tag=>/*#__PURE__*/_jsxs(\"div\",{className:\"tag-box\",children:[tag,/*#__PURE__*/_jsx(\"button\",{className:\"tag-delete\",onClick:e=>deleteTag(e,tag),children:\"X\"})]}))})]}),/*#__PURE__*/_jsx(\"button\",{style:{backgroundColor:\"#ffff00\"},onClick:id===NEW?handleCreate:handleUpdate,children:id===NEW?\"Crea Nota\":\"Aggiorna Nota\"}),id!==NEW&&/*#__PURE__*/_jsx(\"button\",{style:{backgroundColor:\"#ff0000\"},onClick:handleDelete,children:\"Cancella Nota\"})]}),message&&/*#__PURE__*/_jsx(\"div\",{children:message})]});}","map":{"version":3,"names":["React","SERVER_API","ResponseStatus","useNavigate","useParams","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","baseNote","id","title","text","owner","tags","NEW","NotePage","note","setNote","useState","tag","setTag","message","setMessage","nav","useEffect","fetch","concat","then","res","json","data","status","GOOD","value","console","log","catch","handleChange","e","target","name","handleCreate","preventDefault","method","body","JSON","stringify","headers","resBody","newNoteId","alert","handleUpdate","handleDelete","addTag","includes","prevNote","newTags","t","push","deleteTag","filter","children","className","htmlFor","onChange","style","margin","onClick","map","backgroundColor"],"sources":["/Users/alessioprato/Desktop/SELFIE-incompleto-/client/src/NotePage.tsx"],"sourcesContent":["import React from \"react\";\nimport { SERVER_API } from \"./params/params\";\nimport { ResponseBody } from \"./types/ResponseBody\";\nimport { ResponseStatus } from \"./types/ResponseStatus\";\nimport Note from \"./types/Note\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nconst baseNote: Note = {\n\tid: \"\",\n\ttitle: \"\",\n\ttext: \"\",\n\towner: \"\",\n\ttags: [],\n};\n\nconst NEW = \"new\";\n\nexport default function NotePage(): React.JSX.Element {\n\tconst { id } = useParams();\n\tconst [note, setNote] = React.useState(baseNote as Note);\n\tconst [tag, setTag] = React.useState(\"\");\n\tconst [message, setMessage] = React.useState(\"\");\n\tconst nav = useNavigate();\n\n\t// On page load, get the note for the user\n\tReact.useEffect(() => {\n\t\tif (id !== NEW)\n\t\t\tfetch(`${SERVER_API}/notes/${id}`)\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((data) => {\n\t\t\t\t\tif (data.status === ResponseStatus.GOOD) {\n\t\t\t\t\t\tsetNote(data.value as Note);\n\t\t\t\t\t\tconsole.log(data.value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnav(\"/notes\");\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tsetMessage(\"Impossibile raggiungere il server\");\n\t\t\t\t\tnav(\"/notes\");\n\t\t\t\t});\n\t}, [id]);\n\n\tfunction handleChange(e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>): void {\n\t\tsetNote({ ...note, [e.target.name]: e.target.value });\n\t}\n\n\tasync function handleCreate(e: React.MouseEvent<HTMLButtonElement>): Promise<void> {\n\t\te.preventDefault();\n\n\t\ttry {\n\t\t\tconst res = await fetch(`${SERVER_API}/notes`, {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tbody: JSON.stringify(note),\n\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t});\n\n\t\t\tconst resBody = (await res.json()) as ResponseBody;\n\n\t\t\tif (resBody.status === ResponseStatus.GOOD) {\n\t\t\t\tconst newNoteId: string = resBody.value;\n\t\t\t\talert(\"Nota creata correttamente!\");\n\n\t\t\t\t// redirect to update page of the created note\n\t\t\t\tnav(`/notes/${newNoteId}`);\n\t\t\t} else {\n\t\t\t\tsetMessage(\"Errore nell'inserimento della nota\");\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetMessage(\"Impossibile raggiungere il server\");\n\t\t}\n\t}\n\n\tasync function handleUpdate(e: React.MouseEvent<HTMLButtonElement>): Promise<void> {\n\t\te.preventDefault();\n\n\t\t// TODO: validate inputs (not empty, max length)\n\t\ttry {\n\t\t\tconst res = await fetch(`${SERVER_API}/notes/${id}`, {\n\t\t\t\tmethod: \"PUT\",\n\t\t\t\tbody: JSON.stringify(note),\n\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t});\n\n\t\t\tconsole.log(res);\n\t\t\tconst resBody = (await res.json()) as ResponseBody;\n\n\t\t\tif (resBody.status === ResponseStatus.GOOD) {\n\t\t\t\talert(\"Nota modificata correttamente!\");\n\n\t\t\t\tsetNote(resBody.value as Note);\n\t\t\t} else {\n\t\t\t\tsetMessage(\"Errore nell'aggiornamento della nota\");\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetMessage(\"Impossibile raggiungere il server\");\n\t\t}\n\t}\n\n\tasync function handleDelete(e: React.MouseEvent<HTMLButtonElement>): Promise<void> {\n\t\te.preventDefault();\n\n\t\t// TODO: validate inputs (not empty, max length)\n\t\ttry {\n\t\t\tconst res = await fetch(`${SERVER_API}/notes/${id}`, {\n\t\t\t\tmethod: \"DELETE\",\n\t\t\t});\n\n\t\t\tconsole.log(res);\n\t\t\tconst resBody = (await res.json()) as ResponseBody;\n\n\t\t\tif (resBody.status === ResponseStatus.GOOD) {\n\t\t\t\talert(\"Nota cancellata correttamente!\");\n\t\t\t\tnav(\"/notes\");\n\t\t\t} else {\n\t\t\t\tsetMessage(\"Errore della cancellazione della nota\");\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetMessage(\"Impossibile raggiungere il server\");\n\t\t}\n\t}\n\n\tfunction addTag(e: React.MouseEvent<HTMLElement>): void {\n\t\te.preventDefault();\n\n\t\tif (note.tags.includes(tag)) {\n\t\t\tsetMessage(\"Tag già presente nella lista\");\n\t\t\tsetTag(\"\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (tag === \"\") {\n\t\t\tsetMessage(\"Tag vuota non valida\");\n\t\t\treturn;\n\t\t}\n\n\t\tsetNote((prevNote) => {\n\t\t\tconst newTags: string[] = [];\n\t\t\tconsole.log(prevNote.tags);\n\n\t\t\tfor (const t of prevNote.tags) {\n\t\t\t\tnewTags.push(t);\n\t\t\t}\n\t\t\tnewTags.push(tag);\n\n\t\t\treturn { ...prevNote, tags: newTags };\n\t\t});\n\n\t\tsetTag(() => {\n\t\t\treturn \"\";\n\t\t});\n\t}\n\n\tfunction deleteTag(e: React.MouseEvent<HTMLElement>, tag: string): void {\n\t\te.preventDefault();\n\t\tconst tags = note.tags.filter((t) => t !== tag);\n\n\t\tsetNote({ ...note, tags });\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"page-title\">{id === NEW ? \"Crea una nuova nota\" : \"Modifica nota\"}</div>\n\t\t\t<div className=\"note-container\">\n\t\t\t\t<label htmlFor=\"title\">\n\t\t\t\t\tTitolo\n\t\t\t\t\t<input name=\"title\" value={note.title} onChange={handleChange} />\n\t\t\t\t</label>\n\t\t\t\t<label htmlFor=\"title\">\n\t\t\t\t\tTesto\n\t\t\t\t\t<textarea name=\"text\" value={note.text} onChange={handleChange} />\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tTags\n\t\t\t\t\t<label htmlFor=\"title\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tname=\"tag\"\n\t\t\t\t\t\t\tvalue={tag}\n\t\t\t\t\t\t\tonChange={(e: React.ChangeEvent<HTMLInputElement>): void => {\n\t\t\t\t\t\t\t\tsetTag(e.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button style={{ margin: \"auto 0.5em\" }} onClick={addTag}>\n\t\t\t\t\t\t\t+\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</label>\n\t\t\t\t\t<div className=\"tags-container\">\n\t\t\t\t\t\t{note &&\n\t\t\t\t\t\t\tnote.tags &&\n\t\t\t\t\t\t\tnote.tags.map((tag) => (\n\t\t\t\t\t\t\t\t<div className=\"tag-box\">\n\t\t\t\t\t\t\t\t\t{tag}\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName=\"tag-delete\"\n\t\t\t\t\t\t\t\t\t\tonClick={(e: React.MouseEvent<HTMLElement>): void =>\n\t\t\t\t\t\t\t\t\t\t\tdeleteTag(e, tag)\n\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\tX\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</label>\n\t\t\t\t<button\n\t\t\t\t\tstyle={{ backgroundColor: \"#ffff00\" }}\n\t\t\t\t\tonClick={id === NEW ? handleCreate : handleUpdate}>\n\t\t\t\t\t{id === NEW ? \"Crea Nota\" : \"Aggiorna Nota\"}\n\t\t\t\t</button>\n\t\t\t\t{id !== NEW && (\n\t\t\t\t\t<button style={{ backgroundColor: \"#ff0000\" }} onClick={handleDelete}>\n\t\t\t\t\t\tCancella Nota\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t</div>\n\n\t\t\t{message && <div>{message}</div>}\n\t\t</>\n\t);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}