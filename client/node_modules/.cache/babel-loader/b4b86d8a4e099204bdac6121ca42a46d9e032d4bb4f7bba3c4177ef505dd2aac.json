{"ast":null,"code":"import React from\"react\";import{SERVER_API}from\"./params/params\";import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";export default function Projects(){const[message,setMessage]=React.useState(\"\");// On page load, get the events for the user\nReact.useEffect(()=>{(async()=>{try{const res=await fetch(\"\\\"\".concat(SERVER_API,\"/projects\"));console.log(res);}catch(e){setMessage(\"Impossibile raggiungere il server\");}})();},[]);return/*#__PURE__*/_jsx(_Fragment,{children:message&&/*#__PURE__*/_jsx(\"div\",{children:message})});}","map":{"version":3,"names":["React","SERVER_API","jsx","_jsx","Fragment","_Fragment","Projects","message","setMessage","useState","useEffect","res","fetch","concat","console","log","e","children"],"sources":["/Users/alessioprato/Desktop/SELFIE-incompleto-/client/src/Projects.tsx"],"sourcesContent":["import React from \"react\";\nimport { SERVER_API } from \"./params/params\";\n\nexport default function Projects(): React.JSX.Element {\n\tconst [message, setMessage] = React.useState(\"\");\n\n\t// On page load, get the events for the user\n\tReact.useEffect(() => {\n\t\t(async (): Promise<void> => {\n\t\t\ttry {\n\t\t\t\tconst res = await fetch(`\"${SERVER_API}/projects`);\n\t\t\t\tconsole.log(res);\n\t\t\t} catch (e) {\n\t\t\t\tsetMessage(\"Impossibile raggiungere il server\");\n\t\t\t}\n\t\t})();\n\t}, []);\n\n\treturn <>{message && <div>{message}</div>}</>;\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,UAAU,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE7C,cAAe,SAAS,CAAAC,QAAQA,CAAA,CAAsB,CACrD,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGR,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC,CAEhD;AACAT,KAAK,CAACU,SAAS,CAAC,IAAM,CACrB,CAAC,SAA2B,CAC3B,GAAI,CACH,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,MAAAC,MAAA,CAAKZ,UAAU,aAAW,CAAC,CAClDa,OAAO,CAACC,GAAG,CAACJ,GAAG,CAAC,CACjB,CAAE,MAAOK,CAAC,CAAE,CACXR,UAAU,CAAC,mCAAmC,CAAC,CAChD,CACD,CAAC,EAAE,CAAC,CACL,CAAC,CAAE,EAAE,CAAC,CAEN,mBAAOL,IAAA,CAAAE,SAAA,EAAAY,QAAA,CAAGV,OAAO,eAAIJ,IAAA,QAAAc,QAAA,CAAMV,OAAO,CAAM,CAAC,CAAG,CAAC,CAC9C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}